---
title: "Fig. 4 - Interact"
format:
  html:
    embed-resources: true
theme: minty
toc: false
#toc-location: left
#toc-title: Content
#toc-depth: 4
#published-title: Date
#date: 2022-10-23
editor: visual
project:
  type: website
  output-dir: docs
---

```{r, echo=FALSE, warning=FALSE, message=FALSE, results=FALSE}
library(tmap)
library(sf)
library(tidyverse)
library(RColorBrewer)
library(leaflet)
press <- 4 # which pressure definition threshold?
thresh <- 75 # which ambiguity threshold?
scenario <- 'SeaLevelRise'
pal <- brewer.pal(11, 'Spectral') # color palette
typ <- st_read('data/typologies/Mangrove_Typology_v3.14_Composite_valid_centroids.gpkg') 
projections <- read.csv(paste0('outputs/predictions/forecast-predictions', press, '_', thresh, '_', scenario, '_mangrove_model_fit.csv')) %>% 
  rename('Probability of Seaward Gain/Neutrality' = SeawardMang,
         'Probability of Landward Gain/Neutrality' = LandwardMang)
all_scen <- read.csv('outputs/predictions/scenario-forecasts-all_mangrove_model.csv')
Baseline_projection <- st_read('data/typologies/Mangrove_Typology_v3.14_Composite_valid_centroids.gpkg') %>% 
  left_join(projections)
Baseline_projection_class_seaward <- filter(Baseline_projection, !is.na(Seaward))
Baseline_projection_class_landward <- filter(Baseline_projection, !is.na(Landward))
scenario <- typ %>% left_join(all_scen) %>% mutate(Seaward_scenario_gain = case_when(Seaward_scenario_gain == 'Hydrology_Sediment' ~ 'Increase connectivity or sediment',
                                          Seaward_scenario_gain == 'Plant_Hydrology_Sediment' ~ 'Increase connectivity or sediment or landward propagules', 
                                          Seaward_scenario_gain == 'Plant_Hydrology' ~ 'Increase connectivity or landward propagules', 
                                          Seaward_scenario_gain == 'Sediment' ~ 'Increase sediment', 
                                          Seaward_scenario_gain == 'Hydrology' ~ 'Increase connectivity',
                                         .default = NA),
         Seaward_scenario_reduced_risk = case_when(Seaward_scenario_reduced_risk == 'Hydrology_Sediment' ~ 'Increase connectivity or sediment',
                                          Seaward_scenario_reduced_risk== 'Plant_Hydrology_Sediment' ~ 'Increase connectivity or sediment or landward propagules', 
                                          Seaward_scenario_gain == 'Plant_Hydrology' ~ 'Increase connectivity or landward propagules', 
                                          Seaward_scenario_reduced_risk == 'Sediment' ~ 'Increase sediment', 
                                          Seaward_scenario_reduced_risk == 'Hydrology' ~ 'Increase connectivity',
                                         .default = NA),
         Landward_scenario_gain = case_when(Landward_scenario_gain == 'Plant' ~ 'Increase landward propagules',
                                             Landward_scenario_gain == 'Barriers' ~ 'Remove barriers', Landward_scenario_gain == 'Plant_Hydrology_Barriers' ~ 'Increase landward propagules or connectivity or remove barriers', Landward_scenario_gain == 'Hydrology_Barriers' ~ 'Remove barriers or increase connectivity', Landward_scenario_gain == 'Plant_Hydrology' ~ 'Increase landward propagules or connectivity', Landward_scenario_gain == 'Hydrology' ~ 'Increase connectivity', .default = NA),   Landward_scenario_reduced_risk = case_when(Landward_scenario_reduced_risk == 'Plant' ~ 'Increase landward propagules',
                                             Landward_scenario_reduced_risk== 'Barriers' ~ 'Remove barriers', Landward_scenario_reduced_risk == 'Plant_Hydrology_Barriers' ~ 'Increase landward propagules or connectivity or remove barriers', Landward_scenario_reduced_risk== 'Hydrology_Barriers' ~ 'Remove barriers to landward migration or increase connectivity', Landward_scenario_reduced_risk == 'Plant_Hydrology' ~ 'Increase landward propagules or connectivity', Landward_scenario_reduced_risk == 'Hydrology' ~ 'Increase connectivity', .default = NA))
Landward_Scenario_projection_Gain_neutrality <- scenario %>% filter(!is.na(Landward_scenario_gain))
Landward_Scenario_projection_reduced_risk <- scenario %>% filter(!is.na(Landward_scenario_reduced_risk))
Seaward_Scenario_projection_Gain_neutrality <- scenario %>% filter(!is.na(Seaward_scenario_gain))
Seaward_Scenario_projection_reduced_risk <- scenario %>% filter(!is.na(Seaward_scenario_reduced_risk))
```

**Click on the layered diamonds in the top left corner of each map** to turn scenario-based projection layers on or off.

#### Seaward projections

```{r, echo=FALSE, warning=FALSE, message=FALSE, results=TRUE}
tmap_mode('view')

sea <- tm_shape(Baseline_projection) +
  tm_bubbles('Probability of Seaward Gain/Neutrality',
           palette = pal[1:10], 
           midpoint = 50,
           #breaks = seq(0,100,10),
           breaks = c(0,10,25,30,40,50,60,70,75,90,100),
           size = 'Probability of Seaward Gain/Neutrality',
           scale = 0.3,
           alpha = 0.5,
           legend.col.show = T) +
  tm_shape(Baseline_projection_class_seaward) +
  tm_dots('Seaward', 
          palette = c('Loss' = pal[1], 'Ambiguous' = pal[5], 'Gain_neutrality' = pal[10]), 
          alpha = 0.5, 
          size = 0.02) +
  tm_shape(Seaward_Scenario_projection_Gain_neutrality) +
  tm_dots('Seaward_scenario_gain', 
          palette = c('Increase sediment' = 'plum4',  'Increase connectivity' = 'darkgoldenrod2', 'Increase connectivity or sediment' = 'hotpink3', 'Increase connectivity or landward propagules' = 'black', 'Increase connectivity or sediment or landward propagules' = 'midnightblue'), 
          alpha = 0.5, 
          title = '',
          legend.show = T, 
          size = 0.03) +
  tm_shape(Seaward_Scenario_projection_reduced_risk) +
  tm_dots('Seaward_scenario_reduced_risk', 
          palette = c('Increase sediment' = 'plum4',  'Increase connectivity' = 'darkgoldenrod2', 'Increase connectivity or sediment' = 'hotpink3', 'Increase connectivity or landward propagules' = 'black', 'Increase connectivity or sediment or landward propagules' = 'midnightblue'), 
          alpha = 0.5, 
          title = '',
          legend.show = T, 
          size = 0.01)

sea %>% 
  tmap_leaflet() %>%
    leaflet::hideGroup("Baseline_projection_class_seaward") %>% 
    leaflet::hideGroup("Seaward_Scenario_projection_Gain_neutrality") %>% 
    leaflet::hideGroup("Seaward_Scenario_projection_reduced_risk")
```

#### Landward projections

```{r, echo=FALSE, warning=FALSE, message=FALSE, results=TRUE}
tmap_mode('view')

land <- tm_shape(Baseline_projection) +
  tm_bubbles('Probability of Landward Gain/Neutrality',
           palette = pal[1:10], 
           midpoint = 50,
           #breaks = seq(0,100,10),
          breaks = c(0,10,25,30,40,50,60,70,75,90,100),
           size = 'Probability of Landward Gain/Neutrality',
           scale = 0.3,
           alpha = 0.5,
           legend.col.show = T) +
   tm_shape(Baseline_projection_class_landward) +
  tm_dots('Landward', 
          palette = c('Loss' = pal[1], 'Ambiguous' = pal[5], 'Gain_neutrality' = pal[10]), 
          alpha = 0.5, 
          size = 0.02) +
  tm_shape(Landward_Scenario_projection_Gain_neutrality) +
  tm_dots('Landward_scenario_gain', 
          palette = c('Remove barriers' = 'darkcyan', 'Increase landward propagules' = 'yellowgreen', 'Increase connectivity' = 'darkgoldenrod2', 'Remove barriers or increase connectivity' = 'darkorchid4', 'Increase landward propagules or connectivity' = 'black', 'Increase landward propagules or connectivity or remove barriers' = 'deeppink4'), 
          alpha = 0.5, 
          title = '',
          legend.show = T, 
          size = 0.03) +
  tm_shape(Landward_Scenario_projection_reduced_risk) +
  tm_dots('Landward_scenario_reduced_risk', 
         palette = c('Remove barriers' = 'darkcyan', 'Increase landward propagules' = 'yellowgreen', 'Increase connectivity' = 'darkgoldenrod2', 'Plant_Barriers' = 'darkorange3', 'Remove barriers or increase connectivity' = 'darkorchid4', 'Increase landward propagules or connectivity' = 'black', 'Increase landward propagules or connectivity or remove barriers' = 'deeppink4'), 
          alpha = 0.5, 
          title = '',
          legend.show = T, 
          size = 0.01) 

land %>% 
  tmap_leaflet() %>%
   leaflet::hideGroup("Baseline_projection_class_landward") %>% 
  leaflet::hideGroup("Landward_Scenario_projection_Gain_neutrality") %>% 
    leaflet::hideGroup("Landward_Scenario_projection_reduced_risk")
```
